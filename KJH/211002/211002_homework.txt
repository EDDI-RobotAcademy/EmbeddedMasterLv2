(gdb) disas
Dump of assembler code for function main:
=> 0x0000555555555160 <+0>:	endbr64 
   0x0000555555555164 <+4>:	push   %rbp
   0x0000555555555165 <+5>:	mov    %rsp,%rbp
   0x0000555555555168 <+8>:	sub    $0x10,%rsp
   0x000055555555516c <+12>:	movl   $0x3,-0xc(%rbp)
   0x0000555555555173 <+19>:	movl   $0x2,-0x8(%rbp)
   0x000055555555517a <+26>:	mov    -0x8(%rbp),%edx
   0x000055555555517d <+29>:	mov    -0xc(%rbp),%eax
   0x0000555555555180 <+32>:	mov    %edx,%esi
   0x0000555555555182 <+34>:	mov    %eax,%edi
   0x0000555555555184 <+36>:	callq  0x555555555149 <mult>
   0x0000555555555189 <+41>:	mov    %eax,-0x4(%rbp)
   0x000055555555518c <+44>:	mov    -0x4(%rbp),%eax
   0x000055555555518f <+47>:	mov    %eax,%esi
   0x0000555555555191 <+49>:	lea    0xe6c(%rip),%rdi        # 0x555555556004
   0x0000555555555198 <+56>:	mov    $0x0,%eax
   0x000055555555519d <+61>:	callq  0x555555555050 <printf@plt>
   0x00005555555551a2 <+66>:	mov    $0x0,%eax
   0x00005555555551a7 <+71>:	leaveq 
   0x00005555555551a8 <+72>:	retq   
End of assembler dump.
(gdb) info registers
rax            0x555555555160      93824992235872
rbx            0x5555555551b0      93824992235952
rcx            0x5555555551b0      93824992235952
rdx            0x7fffffffe068      140737488347240
rsi            0x7fffffffe058      140737488347224
rdi            0x1                 1
rbp            0x0                 0x0
rsp            0x7fffffffdf68      0x7fffffffdf68
r8             0x0                 0
r9             0x7ffff7fe0d50      140737354009936
r10            0xb                 11
r11            0x2                 2
r12            0x555555555060      93824992235616
r13            0x7fffffffe050      140737488347216
r14            0x0                 0
r15            0x0                 0
rip            0x555555555160      0x555555555160 <main>
eflags         0x246               [ PF ZF IF ]
cs             0x33                51
ss             0x2b                43
ds             0x0                 0
es             0x0                 0
fs             0x0                 0
gs             0x0                 0

===================================================================
   0x0000555555555164 <+4>:	push   %rbp
0x7fffffffdf68 - 0x8 => 0x7fffffffdf60
stack = 0x7fffffffdf60
rsp = 0x7fffffffdf60
===================================================================
   0x0000555555555165 <+5>:	mov    %rsp,%rbp
rsp = 0x7fffffffdf60
rsp -move-> rbp
rbp = 0x7fffffffdf60
===================================================================
   0x0000555555555168 <+8>:	sub    $0x10,%rsp
rsp = 0x7fffffffdf60
rsp - 0x10(16)
rsp = 0x7fffffffdf50
===================================================================
   0x000055555555516c <+12>:	movl   $0x3,-0xc(%rbp)
===================================================================
   0x0000555555555173 <+19>:	movl   $0x2,-0x8(%rbp)
===================================================================
   0x000055555555517a <+26>:	mov    -0x8(%rbp),%edx
===================================================================
   0x000055555555517d <+29>:	mov    -0xc(%rbp),%eax
===================================================================
   0x0000555555555180 <+32>:	mov    %edx,%esi
===================================================================
   0x0000555555555182 <+34>:	mov    %eax,%edi
===================================================================
   0x0000555555555184 <+36>:	callq  0x555555555149 <mult>
===================================================================
   0x0000555555555189 <+41>:	mov    %eax,-0x4(%rbp)
===================================================================
   0x000055555555518c <+44>:	mov    -0x4(%rbp),%eax
===================================================================
   0x000055555555518f <+47>:	mov    %eax,%esi
===================================================================
   0x0000555555555191 <+49>:	lea    0xe6c(%rip),%rdi        # 0x555555556004
===================================================================
   0x0000555555555198 <+56>:	mov    $0x0,%eax
===================================================================
   0x000055555555519d <+61>:	callq  0x555555555050 <printf@plt>
===================================================================
   0x00005555555551a2 <+66>:	mov    $0x0,%eax
===================================================================
   0x00005555555551a7 <+71>:	leaveq 
===================================================================
   0x00005555555551a8 <+72>:	retq   
===================================================================


